import React, { useState } from "react";
import ride from "../../public/ride.png";

const Ride = () => {
  const [username, setUsername] = useState("");
  const [isUsernameConfirmed, setIsUsernameConfirmed] = useState(false);
  const [origin, setOrigin] = useState("");
  const [destination, setDestination] = useState("");
  const [selectedCarBrand, setSelectedCarBrand] = useState("");
  const [paymentMethod, setPaymentMethod] = useState("");

  const carBrands = [
    { name: "Taxi", emoji: "üöñ" },
    { name: "Motorbike", emoji: "üõµ" },
    { name: "Economy", emoji: "üöó" },
  ];

  const paymentMethods = ["‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î", "‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï", "‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå"];

  const handleConfirmUsername = () => {
    if (username.trim() === "") {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡πà‡∏≠‡∏ô!");
    } else {
      setIsUsernameConfirmed(true);
    }
  };

  const handleConfirm = () => {
    if (!origin.trim()) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á!");
      return;
    }
    if (!destination.trim()) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á!");
      return;
    }
    if (!selectedCarBrand) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô");
      return;
    }
    if (!paymentMethod) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô");
      return;
    }
    alert(
      `‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: ${username}\n‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á: ${origin}\n‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á: ${destination}\n‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ: ${selectedCarBrand}\n‡∏ß‡∏¥‡∏ò‡∏µ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô: ${paymentMethod}`
    );
  };

  return (
    <div className="h-screen flex flex-col bg-gray-100">
      {/* ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á */}
      <div className="relative w-full h-45 bg-gray-200">
        <img
          src={ride}
          alt="Travel"
          className="w-full h-full object-cover object-center"
        />
        <div className="absolute bottom-0 left-0 w-full bg-gradient-to-t from-black via-black/40 to-transparent text-white text-center py-2">
          <h1 className="text-xl font-bold">‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì</h1>
        </div>
      </div>

      {/* ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠ */}
      <div className="flex-1 p-4 space-y-6">
        <div className="bg-white p-4 shadow-md rounded-lg">
          <h2 className="text-lg font-bold mb-2">‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</h2>
          <div className="flex items-center space-x-4">
            <input
              type="text"
              value={username}
              onChange={(e) => setUsername(e.target.value)}
              placeholder="‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì..."
              className="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
            <button
              onClick={handleConfirmUsername}
              className="bg-green-500 text-white px-4 py-2 rounded-md font-bold"
            >
              ‡∏ï‡∏Å‡∏•‡∏á
            </button>
          </div>
        </div>

        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á */}
        {isUsernameConfirmed && (
          <div className="bg-white p-4 shadow-md rounded-lg space-y-4">
            <div className="flex flex-col space-y-4">
              {/* ‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á */}
              <div className="flex items-center space-x-4">
                <span className="text-xl">üìç</span>
                <input
                  type="text"
                  value={origin}
                  onChange={(e) => setOrigin(e.target.value)}
                  placeholder="‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì..."
                  className="flex-1 px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
              </div>

              {/* ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á */}
              <div className="flex items-center space-x-4">
                <span className="text-xl">üìç</span>
                <input
                  type="text"
                  value={destination}
                  onChange={(e) => setDestination(e.target.value)}
                  placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏∏‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á..."
                  className="flex-1 px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
              </div>
            </div>
          </div>
        )}

        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ */}
        {isUsernameConfirmed && (
          <div className="bg-white p-4 shadow-md rounded-lg">
            <h2 className="text-lg font-bold mb-2">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ</h2>
            <div className="flex gap-4">
              {carBrands.map((brand) => (
                <button
                  key={brand.name}
                  onClick={() => setSelectedCarBrand(brand.name)}
                  className={`flex flex-col items-center px-4 py-2 rounded-md border ${
                    selectedCarBrand === brand.name
                      ? "bg-blue-500 text-white"
                      : "bg-gray-100 text-gray-600"
                  }`}
                >
                  <span className="text-2xl">{brand.emoji}</span>
                  <span>{brand.name}</span>
                </button>
              ))}
            </div>
          </div>
        )}

        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô */}
        {isUsernameConfirmed && (
          <div className="bg-white p-4 shadow-md rounded-lg">
            <h2 className="text-lg font-bold mb-2 inline-block">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô</h2>
            <div className="flex gap-4 flex-wrap">
              {paymentMethods.map((method) => (
                <button
                  key={method}
                  onClick={() => setPaymentMethod(method)}
                  className={`px-4 py-2 rounded-md border ${
                    paymentMethod === method
                      ? "bg-green-500 text-white"
                      : "bg-gray-100 text-gray-600"
                  }`}
                >
                  {method}
                </button>
              ))}
            </div>
          </div>
        )}
      </div>

      {/* Confirm Button */}
      {isUsernameConfirmed && (
        <div className="bg-white p-4">
          <button
            onClick={handleConfirm}
            className="w-3/4 bg-green-500 text-white px-4 py-2 rounded-md font-bold mx-auto block"
          >
            ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
          </button>
        </div>
      )}
    </div>
  );
};

export default Ride;